bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "catch2", version = "3.8.1")
bazel_dep(name = "aspect_rules_js", version = "2.2.0")
bazel_dep(name = "rules_foreign_cc", version = "0.15.0")
bazel_dep(name = "eigen", version = "4.0.0-20241125.bcr.2")
bazel_dep(name = "boost.geometry", version = "1.87.0")
bazel_dep(name = "earcut", version = "2.2.4")

####### Node.js version #########
# By default you get the node version from DEFAULT_NODE_VERSION in @rules_nodejs//nodejs:repositories.bzl
# Optionally you can pin a different node version:
#bazel_dep(name = "rules_nodejs", version = "6.3.0")
#node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
#node.toolchain(node_version = "20.18.0")
#################################

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)

npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
    bins = {
        # derived from "bin" attribute in node_modules/http-server/package.json
        "http-server": [
            "http-server=./bin/http-server",
        ],
    },
)

use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")

# Allows developers to use the matching pnpm version, for example:
# bazel run -- @pnpm --dir /home/runner/work/rules_js/rules_js install
use_repo(pnpm, "pnpm")


http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
http_archive(
    name = "pmp",
    urls = ["https://github.com/pmp-library/pmp-library/archive/refs/heads/main.zip"],
    build_file = "//:BUILD.pmp.bazel",
    strip_prefix = "pmp-library-main",
    integrity = "sha256-FdLDP5J2PqILLWclTvPVcjRyUUeQ12CVBcX6TAJZSxI=",
)

http_archive(
    name = "ttf2mesh",
    urls = ["https://github.com/fetisov/ttf2mesh/archive/refs/heads/master.zip"],
    build_file = "//:BUILD.ttf2mesh.bazel",
    strip_prefix = "ttf2mesh-master",
    integrity = "sha256-OMD1UIoGqxPjkmzZWsCC8xjymioosmINmXYd8D+VlTM=",
)
